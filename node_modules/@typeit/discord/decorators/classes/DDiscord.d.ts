import { Decorator } from "./Decorator";
import { DCommandNotFound, Commandable, Expression, ArgsRulesFunction, InfosType, ExpressionFunction, RuleBuilder, DiscordInfos } from "../..";
export declare class DDiscord extends Decorator implements Commandable<Expression> {
    protected _argsRules: ArgsRulesFunction[];
    protected _commandNotFound?: DCommandNotFound;
    protected _instance?: Function;
    protected _originalRules: Partial<Commandable>;
    protected _infos: InfosType;
    protected _prefix: Expression | ExpressionFunction;
    get originalRules(): Partial<Commandable<Expression>>;
    get description(): string;
    get prefix(): string | RegExp | RuleBuilder | ExpressionFunction;
    get infos(): InfosType<{
        [key: string]: any;
    }>;
    set infos(value: InfosType<{
        [key: string]: any;
    }>);
    get argsRules(): ArgsRulesFunction<Expression>[];
    set argsRules(value: ArgsRulesFunction<Expression>[]);
    get instance(): Function;
    get commandNotFound(): DCommandNotFound;
    set commandNotFound(value: DCommandNotFound);
    get discordInfos(): DiscordInfos;
    static createDiscord(prefix: Expression | ExpressionFunction): DDiscord;
}
