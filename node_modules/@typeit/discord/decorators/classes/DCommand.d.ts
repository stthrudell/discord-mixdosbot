import { Expression, Commandable, InfosType, ArgsRulesFunction, ExpressionFunction, RuleBuilder, CommandInfos } from "../..";
import { DOn } from "./DOn";
export declare class DCommand extends DOn implements Commandable<Expression> {
    protected _argsRules: ArgsRulesFunction[];
    protected _originalRules: Partial<Commandable>;
    protected _infos: InfosType;
    protected _commandName: Expression | ExpressionFunction;
    get originalRules(): Partial<Commandable<Expression>>;
    get infos(): InfosType<{
        [key: string]: any;
    }>;
    set infos(value: InfosType<{
        [key: string]: any;
    }>);
    get description(): string;
    get argsRules(): ArgsRulesFunction<Expression>[];
    set argsRules(value: ArgsRulesFunction<Expression>[]);
    get commandName(): string | RegExp | RuleBuilder | ExpressionFunction;
    get commandInfos(): CommandInfos;
    static createCommand(commandName?: Expression | ExpressionFunction): DCommand;
    update(): void;
}
