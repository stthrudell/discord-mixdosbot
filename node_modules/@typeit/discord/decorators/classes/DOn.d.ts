import { Decorator } from "./Decorator";
import { DiscordEvents, DDiscord, DGuard, GuardFunction, MainMethod } from "../..";
export declare class DOn extends Decorator {
    protected _event: DiscordEvents;
    protected _mainFunction?: MainMethod<any>;
    protected _linkedDiscord?: DDiscord;
    protected _once: boolean;
    protected _guardsFunction?: (...params: any[]) => Promise<any>;
    protected _originalParams: Partial<DOn>;
    protected _compiledGuards: GuardFunction[];
    protected _guards: DGuard[];
    protected _hidden: boolean;
    get linkedDiscord(): DDiscord;
    set linkedDiscord(value: DDiscord);
    get event(): DiscordEvents;
    set event(value: DiscordEvents);
    get hidden(): boolean;
    set hidden(value: boolean);
    get once(): boolean;
    set once(value: boolean);
    set guards(value: DGuard[]);
    static createOn(event: DiscordEvents, once: boolean): DOn;
    bind(): void;
    getMainFunction<Event extends DiscordEvents = any>(): MainMethod<Event>;
    compileGuardFn(): void;
    private extractGuards;
    private compileMainFunction;
}
