import { Client as ClientJS } from "discord.js";
import { LoadClass, ClientOptions, DiscordEvents, CommandInfos, InfosType, CommandNotFoundInfos, EventInfos, DiscordInfos } from ".";
export declare class Client extends ClientJS {
    private static _variablesChar;
    private static _variablesExpression;
    private _silent;
    private _loadClasses;
    static get variablesChar(): string;
    static get variablesExpression(): RegExp;
    get silent(): boolean;
    set silent(value: boolean);
    /**
     * Create your bot
     * @param options { silent: boolean, loadClasses: LoadClass[] }
     */
    constructor(options?: ClientOptions);
    /**
     * Get the details about the created commands of your app (@Command)
     */
    static getCommands<Type extends InfosType = any>(): CommandInfos<Type>[];
    /**
     * Get the details about the created events of your app (@On)
     */
    static getEvent(): EventInfos[];
    /**
     * Get the details about the created discords of your app (@Discord)
     */
    static getDiscords<Type extends InfosType = any>(): DiscordInfos<Type>[];
    /**
     * Get the details about the created commandsNotFound of your app (@CommandNotFound)
     */
    static getCommandsNotFound<Type extends InfosType = any>(): CommandNotFoundInfos<Type>[];
    /**
     * Start your bot
     * @param token The bot token
     * @param loadClasses A list of glob path or classes
     */
    login(token: string, ...loadClasses: LoadClass[]): Promise<string>;
    /**
     * Manually build the app
     */
    build(): Promise<void>;
    /**
     * Manually trigger an event (used for tests)
     * @param event The event
     * @param params Params to inject
     * @param once Trigger an once event
     */
    trigger(event: DiscordEvents, params?: any, once?: boolean): Promise<any[]>;
    private loadClasses;
}
